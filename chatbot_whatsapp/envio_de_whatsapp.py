# Importamos las librer√≠as necesarias
import os  # Para acceder a las variables de entorno
import requests  # Para realizar peticiones HTTP a la API de WhatsApp
from dotenv import load_dotenv  # Para cargar las variables de entorno desde el archivo .env

# Cargamos las variables de entorno (como el token de WhatsApp)
load_dotenv()
WHATSAPP_TOKEN = os.getenv("WHATSAPP_TOKEN")  # Token de autenticaci√≥n de WhatsApp
PHONE_NUMBER_ID = "611948532009771"  # ID del n√∫mero de tel√©fono de WhatsApp (debe coincidir con tu cuenta de WhatsApp Business)

# Funci√≥n para enviar un mensaje de texto por WhatsApp
def enviar_mensaje_whatsapp(destinatario, mensaje):
    # Construimos la URL de la API de WhatsApp con el n√∫mero de tel√©fono configurado
    url = f"https://graph.facebook.com/v19.0/{PHONE_NUMBER_ID}/messages"

    # Cabeceras HTTP para autenticar la petici√≥n
    headers = {
        "Authorization": "Bearer " + WHATSAPP_TOKEN,  # Autenticaci√≥n con el token
        "Content-Type": "application/json"
    }

    # Cuerpo de la petici√≥n: a qui√©n se env√≠a y el contenido del mensaje
    payload = {
        "messaging_product": "whatsapp",
        "to": destinatario,  # N√∫mero de tel√©fono del destinatario en formato internacional (sin espacios)
        "type": "text",
        "text": {
            "body": mensaje  # Texto del mensaje
        }
    }

    # Realizamos la petici√≥n POST a la API
    response = requests.post(url, headers=headers, json=payload)

    # Mostramos el estado y la respuesta completa de la API (√∫til para depuraci√≥n)
    print("üî¥ C√≥digo de estado:", response.status_code)
    print("üî¥ Respuesta completa:", response.text)

    # Verificamos si el mensaje se envi√≥ correctamente
    if response.ok:
        print("‚úÖ Mensaje enviado correctamente.")
    else:
        print("‚ùå Error al enviar el mensaje.")

# Ejemplo de uso: env√≠a un mensaje de prueba si el script se ejecuta directamente
if __name__ == "__main__":
    enviar_mensaje_whatsapp("34672152844", "Buenos d√≠as!")
